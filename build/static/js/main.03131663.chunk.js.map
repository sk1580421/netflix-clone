{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerurl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03131663.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import react, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerurl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n\r\n            setMovies(request.data.results)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerurl) {\r\n            setTrailerUrl(\"\")\r\n        }\r\n\r\n        else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"))\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"HANDLE ERROR GRACEFULLY\", error);\r\n                    if (trailerurl !== \"\") setTrailerUrl(\"\");\r\n                    else {\r\n                        setTrailerUrl(\"\");\r\n                        setTrailerUrl(\"VV9BZC7-Ss8\");\r\n\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\" >\r\n                {movies.map((movie) => {\r\n\r\n                    return (\r\n\r\n                        <img\r\n                            key={movie.id}\r\n                            onClick={() => handleClick(movie)}\r\n                            className={`row_poster ${isLargeRow && \"rowLargeposter\"}`}\r\n                            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n            {trailerurl && <YouTube videoId={trailerurl} opts={opts} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;","// 61101f675f2d99e5a4f43e9dcee12992\r\n// https://api.themoviedb.org/3/movie/550?api_key=61101f675f2d99e5a4f43e9dcee12992\r\n\r\n\r\nconst API_KEY = \"61101f675f2d99e5a4f43e9dcee12992\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/day?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals)\r\n            setMovie(request.data.results[Math.floor(Math.random() * (request.data.results.length - 1))])\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    console.log(movie)\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"centre centre\",\r\n            }}\r\n        >\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h2 className=\"banner_description\">{movie?.overview}</h2>\r\n            </div>\r\n            <div className=\"fade_bottom\" />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                setShow(true);\r\n            }\r\n            else {\r\n                setShow(false);\r\n            }\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img className=\"nav_logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix_logo\" />\r\n            <img className=\"nav_avatar\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"netflix_avatarn\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import react from 'react';\r\nimport Row from './Row';\r\nimport requests from './requests';\r\nimport './App.css'\r\nimport Banner from './Banner'\r\nimport Navbar from './Nav'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='app'>\r\n            <Navbar />\r\n            <Banner />\r\n            <Row\r\n                isLargeRow\r\n                title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} />\r\n            <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n            <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n            <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n            <Row title=\"Ramantic movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n            <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentaries} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}